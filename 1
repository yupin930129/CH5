myproject/
├── manage.py
├── Procfile
├── render.yaml
├── requirements.txt
├── db.sqlite3
├── myproject/
│   ├── __init__.py
│   ├── settings.py
│   ├── urls.py
│   └── wsgi.py
├── myapp/
│   ├── __init__.py
│   ├── views.py
│   ├── urls.py
│   └── templates/
│       └── post_form.html

# manage.py
#!/usr/bin/env python
import os
import sys

def main():
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')
    try:
        from django.core.management import execute_from_command_line
    except ImportError as exc:
        raise ImportError("Couldn't import Django.") from exc
    execute_from_command_line(sys.argv)

if __name__ == '__main__':
    main()

# Procfile
web: gunicorn myproject.wsgi:application

# render.yaml
services:
  - type: web
    name: django-render-app
    env: python
    buildCommand: pip install -r requirements.txt
    startCommand: gunicorn myproject.wsgi:application
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: myproject.settings
      - key: PYTHON_VERSION
        value: 3.10

# requirements.txt
django
gunicorn
whitenoise

# myproject/settings.py
import os
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent
SECRET_KEY = 'django-insecure-placeholder-key'
DEBUG = False
ALLOWED_HOSTS = ['*']

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'myapp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myproject.urls'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myproject.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# myproject/urls.py
from django.contrib import admin
from django.urls import path, include

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('myapp.urls')),
]

# myproject/wsgi.py
import os
from django.core.wsgi import get_wsgi_application

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'myproject.settings')
application = get_wsgi_application()

# myapp/urls.py
from django.urls import path
from . import views

urlpatterns = [
    path('', views.post),
]

# myapp/views.py
from django.shortcuts import render

def post(request):
    if request.method == 'POST':
        name = request.POST.get('name')
        age = request.POST.get('age')
        return render(request, 'post_form.html', {'message': f'收到：{name}, {age}'})
    return render(request, 'post_form.html')

# myapp/templates/post_form.html
<!DOCTYPE html>
<html>
<head><title>表單</title></head>
<body>
<h2>輸入資料</h2>
<form method="post">
  {% csrf_token %}
  姓名：<input type="text" name="name"><br>
  年齡：<input type="text" name="age"><br>
  <input type="submit" value="送出資料" />
</form>
{% if message %}<p>{{ message }}</p>{% endif %}
</body>
</html>
